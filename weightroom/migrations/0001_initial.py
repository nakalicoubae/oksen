# Generated by Django 5.0.7 on 2024-07-27 17:08

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('student_number', models.IntegerField(unique=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('fine', models.IntegerField(default=0)),
                ('unpaid_fine', models.IntegerField(default=0)),
                ('accumulated_warnings', models.IntegerField(default=0)),
                ('total_usage_time', models.IntegerField(default=0)),
                ('latest_usage_time', models.CharField(default='', max_length=11)),
                ('using_now', models.IntegerField(default=0)),
                ('total_fine', models.IntegerField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('student_number', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='UsageTime',
            fields=[
                ('start_time', models.TimeField(primary_key=True, serialize=False)),
                ('end_time', models.TimeField()),
                ('extended_time', models.IntegerField(null=True)),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Checklist',
            fields=[
                ('member', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='checklist', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('plates_cleaned', models.BooleanField(default=False)),
                ('barbell_cleaned', models.BooleanField(default=False)),
                ('bench_cleaned', models.BooleanField(default=False)),
                ('dumbbells_cleaned', models.BooleanField(default=False)),
                ('situp_board_cleaned', models.BooleanField(default=False)),
                ('emergency_exit_checked', models.BooleanField(default=False)),
                ('lights_off', models.BooleanField(default=False)),
                ('damage_report', models.TextField(blank=True)),
                ('requirements', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Usage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('usage_date', models.DateField()),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddConstraint(
            model_name='usagetime',
            constraint=models.CheckConstraint(check=models.Q(('extended_time__lte', 30)), name='extended_time_lte_30'),
        ),
        migrations.AddField(
            model_name='usage',
            name='usage_time',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='weightroom.usagetime'),
        ),
        migrations.AlterUniqueTogether(
            name='usage',
            unique_together={('member', 'usage_time')},
        ),
    ]
